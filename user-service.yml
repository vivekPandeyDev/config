info:
  app:
    name: user-service
    description: User Service Microservice
    version: 1.0.0
# jakarta server port
server:
  port: 8081
# eureka client registration
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
# enable minio cleint
minio:
  endpoint: ${MINIO_URI:http://localhost:9000}
  accessKey: minioadmin
  secretKey: minioadmin
  bucketName: users
# spring config
spring:
# spring application name
  application:
    name: user-service
  messages:
    basename: messages
    encoding: UTF-8
  #  spring data source
  datasource:
    url: ${DB_URI:jdbc:postgresql://localhost:5432/book-club}
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 30000
      pool-name: HikariPool-19
  # spring jpa
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  # spring file size
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
  # spring kafka config
  kafka:
    bootstrap-servers: ${KAFKA_URI:localhost:9092}
    #    consumer setting
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
    #   producer setting
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      topic: user-events